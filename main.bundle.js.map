{"version":3,"sources":["D:/ng2-tree/index.ts","D:/ng2-tree/src/demo lazy","D:/ng2-tree/src/demo/app/app.component.ts","D:/ng2-tree/src/demo/app/app.module.ts","D:/ng2-tree/src/demo/app/button.ts","D:/ng2-tree/src/demo/environments/environment.ts","D:/ng2-tree/src/demo/main.ts","D:/ng2-tree/src/draggable/captured-node.ts","D:/ng2-tree/src/draggable/draggable.events.ts","D:/ng2-tree/src/draggable/node-draggable.directive.ts","D:/ng2-tree/src/draggable/node-draggable.service.ts","D:/ng2-tree/src/editable/editable.events.ts","D:/ng2-tree/src/editable/node-editable.directive.ts","D:/ng2-tree/src/menu/menu.events.ts","D:/ng2-tree/src/menu/node-menu.component.ts","D:/ng2-tree/src/menu/node-menu.service.ts","D:/ng2-tree/src/tree-controller.ts","D:/ng2-tree/src/tree-internal.component.ts","D:/ng2-tree/src/tree.component.ts","D:/ng2-tree/src/tree.events.ts","D:/ng2-tree/src/tree.module.ts","D:/ng2-tree/src/tree.service.ts","D:/ng2-tree/src/tree.ts","D:/ng2-tree/src/tree.types.ts","D:/ng2-tree/src/utils/event.utils.ts","D:/ng2-tree/src/utils/fn.utils.ts","D:/ng2-tree/src/utils/safe-html.pipe.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import {\r\n  TreeModel,\r\n  TreeModelSettings,\r\n  Ng2TreeSettings,\r\n  RenamableNode,\r\n  FoldingType,\r\n  ChildrenLoadingFunction\r\n} from './src/tree.types';\r\n\r\nimport { Tree } from './src/tree';\r\n\r\nimport {\r\n  NodeEvent,\r\n  NodeCreatedEvent,\r\n  NodeRemovedEvent,\r\n  NodeRenamedEvent,\r\n  NodeMovedEvent,\r\n  NodeSelectedEvent,\r\n  NodeExpandedEvent,\r\n  NodeCollapsedEvent,\r\n  NodeDestructiveEvent\r\n} from './src/tree.events';\r\n\r\nimport { TreeComponent } from './src/tree.component';\r\nimport { TreeModule } from './src/tree.module';\r\n\r\nexport {\r\n  Tree,\r\n  TreeModel,\r\n  TreeModelSettings,\r\n  Ng2TreeSettings,\r\n  RenamableNode,\r\n  FoldingType,\r\n  NodeEvent,\r\n  NodeCreatedEvent,\r\n  NodeRemovedEvent,\r\n  NodeRenamedEvent,\r\n  NodeMovedEvent,\r\n  NodeSelectedEvent,\r\n  NodeExpandedEvent,\r\n  NodeCollapsedEvent,\r\n  NodeDestructiveEvent,\r\n  TreeComponent,\r\n  TreeModule\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// D:/ng2-tree/index.ts","function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/demo lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/ng2-tree/src/demo lazy\n// module id = ../../../../../src/demo lazy recursive\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NodeEvent, TreeModel, RenamableNode, Ng2TreeSettings } from '../../../index';\r\n\r\ndeclare const alertify: any;\r\n\r\n@Component({\r\n  selector: 'app',\r\n  template: `\r\n    <div class=\"tree-demo-app\">\r\n      <div class=\"tree-container\">\r\n        <div class=\"tree-info\"><p class=\"tree-title\">Fonts tree</p></div>\r\n        <div class=\"tree-content\">\r\n          <tree #treeFonts\r\n                [tree]=\"fonts\"\r\n                (nodeRemoved)=\"onNodeRemoved($event)\"\r\n                (nodeRenamed)=\"onNodeRenamed($event)\"\r\n                (nodeSelected)=\"onNodeSelected($event)\"\r\n                (nodeMoved)=\"onNodeMoved($event)\"\r\n                (nodeCreated)=\"onNodeCreated($event)\"\r\n                (nodeExpanded)=\"onNodeExpanded($event)\"\r\n                (nodeCollapsed)=\"onNodeCollapsed($event)\">\r\n          </tree>\r\n        </div>\r\n      </div>\r\n      <div class=\"tree-container\">\r\n        <div class=\"tree-info\"><p class=\"tree-title\">Programming languages tree</p>\r\n          <p class=\"notice\">this tree is loaded asynchronously</p></div>\r\n        <div class=\"tree-content\">\r\n          <tree\r\n            [tree]=\"pls\"\r\n            [settings]=\"settings\"\r\n            (nodeRemoved)=\"onNodeRemoved($event)\"\r\n            (nodeRenamed)=\"onNodeRenamed($event)\"\r\n            (nodeSelected)=\"onNodeSelected($event)\"\r\n            (nodeMoved)=\"onNodeMoved($event)\"\r\n            (nodeCreated)=\"onNodeCreated($event)\">\r\n          </tree>\r\n        </div>\r\n      </div>\r\n      <div class=\"tree-container tree-container--with-controls\">\r\n        <div class=\"tree-info\">\r\n          <p class=\"tree-title\">Directory/File structure</p>\r\n          <p class=\"notice\">this tree has advanced configurations</p>\r\n        </div>\r\n        <div class=\"tree-content\">\r\n          <tree #treeFFS\r\n                [tree]=\"ffs\"\r\n                (nodeRemoved)=\"onNodeRemoved($event)\"\r\n                (nodeRenamed)=\"onNodeRenamed($event)\"\r\n                (nodeSelected)=\"onNodeSelected($event)\"\r\n                (nodeMoved)=\"onNodeMoved($event)\"\r\n                (nodeCreated)=\"onNodeFFSCreated($event)\"\r\n                (nodeExpanded)=\"onNodeExpanded($event)\"\r\n                (nodeCollapsed)=\"onNodeCollapsed($event)\">\r\n          </tree>\r\n        </div>\r\n\r\n        <div class=\"tree-controlls\">\r\n          <p class=\"notice\">Tree API exposed via TreeController</p>\r\n          <button button (click)=\"handleActionOnFFS(13, 'select')\">Select 'boot' node</button>\r\n          <button button (click)=\"handleActionOnFFS(2, 'collapse')\">Collapse 'bin' node</button>\r\n          <button button (click)=\"handleActionOnFFS(2, 'expand')\">Expand 'bin' node</button>\r\n          <button button (click)=\"renameFFS(21)\">Rename 'unicode.pf2' to 'unicode.pf'</button>\r\n          <button button (click)=\"handleActionOnFFS(12, 'remove')\">Remove 'nano'</button>\r\n          <button button (click)=\"handleActionOnFFS(52, 'reloadChildren')\">Reload Music's children</button>\r\n          <button button (click)=\"setChildrenFFS(36)\">Set 'etc' children</button>\r\n          <button button (click)=\"addChildFFS(2, { value: 'ping'})\">Add a child with name 'ping' to 'bin'</button>\r\n          <button button (click)=\"addChildFFS(22, { value: 'lost'})\">Add a child with name 'lost' to 'lost+found'\r\n          </button>\r\n          <button button (click)=\"addChildFFS(22, { value: 'found', children: []})\">Add a child with name 'found' to\r\n            'lost+found'\r\n          </button>\r\n          <button button (click)=\"addChildFFS(36, { value: 'found', children: []})\">Add a child with name 'found' to\r\n            'etc'\r\n          </button>\r\n          <button button (click)=\"addChildFFS(78, { value: 'Voodo People'})\">Add a child with name 'Voodo People' to\r\n            '2Cellos'\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"tree-container\">\r\n        <div class=\"tree-info\"><p class=\"tree-title\">Programming languages tree</p>\r\n          <p class=\"notice\">this tree is using a custom template</p></div>\r\n        <div class=\"tree-content\">\r\n          <tree [tree]=\"icons\"\r\n                [settings]=\"settings\"\r\n                (nodeRemoved)=\"onNodeRemoved($event)\"\r\n                (nodeRenamed)=\"onNodeRenamed($event)\"\r\n                (nodeSelected)=\"onNodeSelected($event)\"\r\n                (nodeMoved)=\"onNodeMoved($event)\"\r\n                (nodeCreated)=\"onNodeCreated($event)\">\r\n            <ng-template let-node>\r\n              <i class=\"fa {{node.icon}}\"></i> <span class=\"node-name\" [innerHTML]=\"node.value\"></span>\r\n            </ng-template>\r\n          </tree>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .tree-info {\r\n      flex: 1 0 100%;\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: flex-start;\r\n    }\r\n\r\n    .tree-controlls {\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n\r\n    .tree-content {\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n\r\n    .tree-container {\r\n      margin-bottom: 20px;\r\n\r\n    }\r\n\r\n    .tree-container--with-controls {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n    }\r\n\r\n    .tree-demo-app {\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n\r\n    .tree-title {\r\n      margin: 0;\r\n      color: #40a070;\r\n      font-size: 2em;\r\n    }\r\n\r\n    .notice {\r\n      color: #e91e63;\r\n      font-size: 1.2em;\r\n      font-style: italic;\r\n    }\r\n\r\n    :host /deep/ .fa {\r\n      cursor: pointer;\r\n    }\r\n\r\n    :host /deep/ .fa.disabled {\r\n      cursor: inherit;\r\n      color: #757575;\r\n    }\r\n\r\n    .button {\r\n      border-radius: 4px;\r\n      box-shadow: 0 2px 4px 0 #888;\r\n      background-color: #fff;\r\n      -webkit-appearance: none;\r\n      border: 1px solid #000;\r\n      height: 35px;\r\n      outline: none;\r\n    }\r\n\r\n    .button-pressed {\r\n      box-shadow: 0 0 1px 0 #888;\r\n    }\r\n\r\n    .tree-controlls button {\r\n      margin: 5px;\r\n    }\r\n  `]\r\n})\r\nexport class AppComponent implements OnInit {\r\n  public settings: Ng2TreeSettings = {\r\n    rootIsVisible: false\r\n  };\r\n\r\n  public fonts: TreeModel = {\r\n    value: 'Fonts',\r\n    children: [\r\n      {\r\n        value: 'Serif  -  All my children and I are STATIC ¯\\\\_(ツ)_/¯',\r\n        id: 1,\r\n        settings: {\r\n          'static': true\r\n        },\r\n        children: [\r\n          {value: '<a href=\"#\" id=\"antiqua\" class=\"test\">Antiqua</a> with HTML tags.', id: 2},\r\n          {value: 'DejaVu Serif', id: 3},\r\n          {value: 'Garamond', id: 4},\r\n          {value: 'Georgia', id: 5},\r\n          {value: 'Times New Roman', id: 6},\r\n          {\r\n            value: 'Slab serif',\r\n            id: 7,\r\n            children: [\r\n              {value: 'Candida', id: 8},\r\n              {value: 'Swift', id: 9},\r\n              {value: 'Guardian Egyptian', id: 10}\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        value: 'Sans-serif',\r\n        id: 11,\r\n        children: [\r\n          {value: 'Arial', id: 12},\r\n          {value: 'Century Gothic', id: 13},\r\n          {value: 'DejaVu Sans', id: 14},\r\n          {value: 'Futura', id: 15},\r\n          {value: 'Geneva', id: 16},\r\n          {value: 'Liberation Sans', id: 17}\r\n        ]\r\n      },\r\n      {\r\n        value: 'Monospace - With ASYNC CHILDREN',\r\n        id: 18,\r\n        // children property is ignored if \"loadChildren\" is present\r\n        children: [{value: 'I am the font that will be ignored'}],\r\n        loadChildren: (callback) => {\r\n          setTimeout(() => {\r\n            callback([\r\n              {value: 'Input Mono', id: 19},\r\n              {value: 'Roboto Mono', id: 20},\r\n              {value: 'Liberation Mono', id: 21},\r\n              {value: 'Hack', id: 22},\r\n              {value: 'Consolas', id: 23},\r\n              {value: 'Menlo', id: 24},\r\n              {value: 'Source Code Pro', id: 25}\r\n            ]);\r\n          }, 5000);\r\n        }\r\n      }\r\n    ]\r\n  };\r\n\r\n  @ViewChild('treeFonts') public treeFonts;\r\n\r\n  public pls: TreeModel;\r\n\r\n  public ffs: TreeModel = {\r\n    value: '/',\r\n    id: 1,\r\n    settings: {\r\n      cssClasses: {\r\n        expanded: 'fa fa-caret-down',\r\n        collapsed: 'fa fa-caret-right',\r\n        empty: 'fa fa-caret-right disabled',\r\n        leaf: 'fa'\r\n      },\r\n      templates: {\r\n        node: '<i class=\"fa fa-folder-o\"></i>',\r\n        leaf: '<i class=\"fa fa-file-o\"></i>'\r\n      }\r\n    },\r\n    children: [\r\n      {\r\n        value: 'bin',\r\n        id: 2,\r\n        children: [\r\n          {value: 'bash', id: 3},\r\n          {value: 'umount', id: 4},\r\n          {value: 'cp', id: 5},\r\n          {value: 'less', id: 6},\r\n          {value: 'rmdir', id: 7},\r\n          {value: 'touch', id: 8},\r\n          {value: 'chgrp', id: 9},\r\n          {value: 'chmod', id: 10},\r\n          {value: 'chown', id: 11},\r\n          {value: 'nano', id: 12}\r\n        ]\r\n      },\r\n      {\r\n        value: 'boot',\r\n        id: 13,\r\n        children: [\r\n          {\r\n            value: 'grub',\r\n            id: 14,\r\n            children: [\r\n              {value: 'fonts', id: 15},\r\n              {value: 'gfxblacklist.txt', id: 16},\r\n              {value: 'grub.cfg', id: 17},\r\n              {value: 'grubenv', id: 18},\r\n              {value: 'i386-pc', id: 19},\r\n              {value: 'locale', id: 20},\r\n              {value: 'unicode.pf2', id: 21}\r\n            ]\r\n          },\r\n          {\r\n            value: 'lost+found',\r\n            id: 22,\r\n            children: []\r\n          },\r\n          {value: 'abi-4.4.0-57-generic', id: 23},\r\n          {value: 'config-4.4.0-57-generic', id: 24},\r\n          {value: 'initrd.img-4.4.0-47-generic', id: 25},\r\n          {value: 'initrd.img-4.4.0-57-generic', id: 26},\r\n          {value: 'memtest86+.bin', id: 27},\r\n          {value: 'System.map-4.4.0-57-generic', id: 28},\r\n          {value: 'memtest86+.elf', id: 29},\r\n          {value: 'vmlinuz-4.4.0-57-generic', id: 30},\r\n          {value: 'memtest86+_multiboot.bin', id: 31}\r\n        ]\r\n      },\r\n      {\r\n        value: 'build-no-left-no-right-menus',\r\n        id: 32,\r\n        settings: {\r\n          leftMenu: false,\r\n          rightMenu: false\r\n        },\r\n        children: [\r\n          {\r\n            value: 'php5-left-menu',\r\n            id: 33,\r\n            settings: {\r\n              leftMenu: true\r\n            }\r\n          },\r\n          {\r\n            value: 'grails-left-menu',\r\n            id: 335,\r\n            settings: {\r\n              leftMenu: true\r\n            }\r\n          },\r\n          {\r\n            value: 'python-right-menu',\r\n            id: 333,\r\n            settings: {\r\n              rightMenu: true\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {value: 'cdrom', id: 34, children: []},\r\n      {value: 'dev', id: 35, children: []},\r\n      {\r\n        value: 'etc',\r\n        id: 36,\r\n        loadChildren: (callback) => {\r\n          console.log('callback function called to load etc`s children');\r\n          setTimeout(() => {\r\n            callback([\r\n              {value: 'apache2', id: 82, children: []},\r\n              {value: 'nginx', id: 83, children: []},\r\n              {value: 'dhcp', id: 84, children: []},\r\n              {value: 'dpkg', id: 85, children: []}\r\n            ]);\r\n          });\r\n        }\r\n      },\r\n      {\r\n        value: 'home',\r\n        id: 37,\r\n        children: [\r\n          {\r\n            value: 'firstUser',\r\n            id: 38,\r\n            children: [\r\n              {\r\n                value: 'Documents',\r\n                id: 39,\r\n                children: [\r\n                  {\r\n                    value: 'home',\r\n                    id: 40,\r\n                    children: [\r\n                      {\r\n                        value: 'bills',\r\n                        id: 41,\r\n                        children: [\r\n                          {value: '2016-07-01-mobile.pdf', id: 42},\r\n                          {value: '2016-07-01-electricity.pdf', id: 43},\r\n                          {value: '2016-07-01-water.pdf', id: 44},\r\n                          {value: '2016-07-01-internet.pdf', id: 45},\r\n                          {value: '2016-08-01-mobile.pdf', id: 46},\r\n                          {value: '2016-10-01-internet.pdf', id: 47}\r\n                        ]\r\n                      },\r\n                      {value: 'photos', id: 48, children: []}\r\n                    ]\r\n                  }\r\n                ]\r\n              },\r\n              {value: 'Downloads', id: 49, children: []},\r\n              {value: 'Desktop', id: 50, children: []},\r\n              {value: 'Pictures', id: 51, children: []},\r\n              {\r\n                value: 'Music',\r\n                id: 52,\r\n                children: [{value: 'won\\'t be displayed'}],\r\n                loadChildren: (callback) => {\r\n                  setTimeout(() => {\r\n                    callback([\r\n                      {value: '2Cellos', id: 78, children: []},\r\n                      {value: 'Michael Jackson', id: 79, children: []},\r\n                      {value: 'AC/DC', id: 80, children: []},\r\n                      {value: 'Adel', id: 81, children: []}\r\n                    ]);\r\n                  }, 5000);\r\n                }\r\n              },\r\n              {value: 'Public', id: 53, children: []}\r\n            ]\r\n          },\r\n          {\r\n            value: 'secondUser - left menu templates',\r\n            id: 54,\r\n            settings: {\r\n              leftMenu: true\r\n            },\r\n            children: [\r\n              {value: 'Documents', id: 55, children: []},\r\n              {\r\n                value: 'Downloads - custom left menu template',\r\n                id: 56,\r\n                settings: {\r\n                  templates: {\r\n                    leftMenu: '<i class=\"fa fa-navicon\"></i>'\r\n                  }\r\n                },\r\n                children: [\r\n                  {value: 'Actobat3', id: 57},\r\n                  {value: 'Complib', id: 58},\r\n                  {value: 'Eudora', id: 59},\r\n                  {value: 'java', id: 60},\r\n                  {value: 'drivers', id: 61},\r\n                  {value: 'kathy', id: 62}\r\n                ]\r\n              },\r\n              {value: 'Desktop', id: 63, children: []},\r\n              {value: 'Pictures', id: 64, children: []},\r\n              {value: 'Music', id: 65, children: []},\r\n              {value: 'Public', id: 66, children: []}\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {value: 'lib', id: 67, children: []},\r\n      {value: 'media', id: 68, children: []},\r\n      {value: 'opt', id: 69, children: []},\r\n      {value: 'proc', id: 70, children: []},\r\n      {value: 'root', id: 71, children: []},\r\n      {value: 'run', id: 72, children: []},\r\n      {value: 'sbin', id: 73, children: []},\r\n      {value: 'srv', id: 74, children: []},\r\n      {value: 'sys', id: 75, children: []},\r\n      {value: 'usr', id: 76, children: []},\r\n      {value: 'var', id: 77, children: []}\r\n    ]\r\n  };\r\n  private lastFFSNodeId = 86;\r\n\r\n  @ViewChild('treeFFS') public treeFFS;\r\n\r\n  public icons: TreeModel = {\r\n    value: 'Icons',\r\n    children: [\r\n      {\r\n        value: 'Web Application Icons',\r\n        children: [\r\n          {value: 'calendar', icon: 'fa-calendar' },\r\n          {value: 'download', icon: 'fa-download' },\r\n          {value: 'group', icon: 'fa-group' },\r\n          {value: 'print', icon: 'fa-print' }\r\n        ]\r\n      },\r\n      {\r\n        value: 'Hand Icons',\r\n        children: [\r\n          {value: 'pointer', icon: 'fa-hand-pointer-o' },\r\n          {value: 'grab', icon: 'fa-hand-rock-o' },\r\n          {value: 'thumbs up', icon: 'fa-thumbs-o-up ' },\r\n          {value: 'thumbs down', icon: 'fa-thumbs-o-down' }\r\n        ]\r\n      },\r\n      {\r\n        value: 'File Type Icons',\r\n        children: [\r\n          {value: 'file', icon: 'fa-file-o' },\r\n          {value: 'audio', icon: 'fa-file-audio-o' },\r\n          {value: 'movie', icon: 'fa-file-movie-o ' },\r\n          {value: 'archive', icon: 'fa-file-zip-o' }\r\n        ]\r\n      },\r\n   ]\r\n  };\r\n\r\n  private static logEvent(e: NodeEvent, message: string): void {\r\n    console.log(e);\r\n    alertify.message(`${message}: ${e.node.value}`);\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    setTimeout(() => {\r\n      this.pls = {\r\n        value: 'Programming languages by programming paradigm',\r\n        children: [\r\n          {\r\n            value: 'Aspect-oriented programming',\r\n            children: [\r\n              {value: 'AspectJ'},\r\n              {value: 'AspectC++'}\r\n            ]\r\n          },\r\n          {\r\n            value: 'Object-oriented programming',\r\n            children: [\r\n              {\r\n                value: {\r\n                  name: 'Java',\r\n                  setName(name: string): void {\r\n                    this.name = name;\r\n                  },\r\n                  toString(): string {\r\n                    return this.name;\r\n                  }\r\n                } as RenamableNode\r\n              },\r\n              {value: 'C++'},\r\n              {value: 'C#'}\r\n            ]\r\n          },\r\n          {\r\n            value: 'Prototype-based programming',\r\n            children: [\r\n              {value: 'JavaScript'},\r\n              {value: 'CoffeeScript'},\r\n              {value: 'TypeScript'}\r\n            ]\r\n          }\r\n        ]\r\n      };\r\n    }, 2000);\r\n  }\r\n\r\n  public onNodeRemoved(e: NodeEvent): void {\r\n    AppComponent.logEvent(e, 'Removed');\r\n  }\r\n\r\n  public onNodeMoved(e: NodeEvent): void {\r\n    AppComponent.logEvent(e, 'Moved');\r\n  }\r\n\r\n  public onNodeRenamed(e: NodeEvent): void {\r\n    AppComponent.logEvent(e, 'Renamed');\r\n  }\r\n\r\n  public onNodeCreated(e: NodeEvent): void {\r\n    AppComponent.logEvent(e, 'Created');\r\n  }\r\n\r\n  public onNodeFFSCreated(e: NodeEvent, controller): void {\r\n    AppComponent.logEvent(e, 'Created');\r\n    if (controller) {\r\n      controller.changeNodeId(++this.lastFFSNodeId);\r\n    }\r\n  }\r\n\r\n  public onNodeSelected(e: NodeEvent): void {\r\n    AppComponent.logEvent(e, 'Selected');\r\n  }\r\n\r\n  public onNodeExpanded(e: NodeEvent): void {\r\n    AppComponent.logEvent(e, 'Expanded');\r\n  }\r\n\r\n  public onNodeCollapsed(e: NodeEvent): void {\r\n    AppComponent.logEvent(e, 'Collapsed');\r\n  }\r\n\r\n  public handleActionOnFFS(id: number | string, action: string) {\r\n    const treeController = this.treeFFS.getControllerByNodeId(id);\r\n    if (treeController && typeof treeController[action] === 'function') {\r\n      treeController[action]();\r\n    } else {\r\n      console.log('There isn`t a controller for a node with id - ' + id);\r\n    }\r\n  }\r\n\r\n  public renameFFS(id: number | string) {\r\n    const treeController = this.treeFFS.getControllerByNodeId(id);\r\n    if (treeController) {\r\n      treeController.rename('unicode.pf');\r\n    } else {\r\n      console.log('There isn`t a controller for a node with id - ' + id);\r\n    }\r\n  }\r\n\r\n  public setChildrenFFS(id: number | string) {\r\n    const treeController = this.treeFFS.getControllerByNodeId(id);\r\n    if (treeController && typeof treeController.setChildren === 'function') {\r\n      treeController.setChildren([\r\n        {value: 'apache2', id: 82, children: []},\r\n        {value: 'nginx', id: 83, children: []},\r\n        {value: 'dhcp', id: 84, children: []},\r\n        {value: 'dpkg', id: 85, children: []},\r\n        {value: 'gdb', id: 86, children: []}\r\n      ]);\r\n    } else {\r\n      console.log('There isn`t a controller for a node with id - ' + id);\r\n    }\r\n  }\r\n\r\n  public addChildFFS(id: number | string, newNode: TreeModel) {\r\n    newNode.id = ++this.lastFFSNodeId;\r\n    const treeController = this.treeFFS.getControllerByNodeId(id);\r\n    if (treeController) {\r\n      treeController.addChild(newNode);\r\n    } else {\r\n      console.log(`Controller is absent for a node with id: ${id}`);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/ng2-tree/src/demo/app/app.component.ts","import { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { TreeModule } from '../../../index';\r\nimport { ButtonDirective } from './button';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, ButtonDirective],\r\n  imports: [BrowserModule, CommonModule, TreeModule],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// D:/ng2-tree/src/demo/app/app.module.ts","import { Directive, ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[button]'\r\n})\r\nexport class ButtonDirective {\r\n\r\n  constructor(private el: ElementRef) {\r\n    el.nativeElement.classList.add('button');\r\n\r\n    el.nativeElement.addEventListener('mousedown', (e) => {\r\n      el.nativeElement.classList.add('button-pressed');\r\n    });\r\n\r\n    el.nativeElement.addEventListener('mouseup', (e) => {\r\n      el.nativeElement.classList.remove('button-pressed');\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/ng2-tree/src/demo/app/button.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// D:/ng2-tree/src/demo/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// D:/ng2-tree/src/demo/main.ts","import { Tree } from '../tree';\r\nimport { ElementRef } from '@angular/core';\r\n\r\nexport class CapturedNode {\r\n  public constructor(private anElement: ElementRef,\r\n                     private aTree: Tree) {\r\n  }\r\n\r\n  public canBeDroppedAt(element: ElementRef): boolean {\r\n    return !this.sameAs(element) && !this.contains(element);\r\n  }\r\n\r\n  public contains(other: ElementRef): boolean {\r\n    return this.element.nativeElement.contains(other.nativeElement);\r\n  }\r\n\r\n  public sameAs(other: ElementRef): boolean {\r\n    return this.element === other;\r\n  }\r\n\r\n  public get element(): ElementRef {\r\n    return this.anElement;\r\n  }\r\n\r\n  public get tree(): Tree {\r\n    return this.aTree;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/ng2-tree/src/draggable/captured-node.ts","import { ElementRef } from '@angular/core';\r\nimport { CapturedNode } from './captured-node';\r\n\r\nexport class NodeDraggableEvent {\r\n  public constructor(public captured: CapturedNode, public target: ElementRef) {\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/ng2-tree/src/draggable/draggable.events.ts","import { Directive, ElementRef, Input, Inject, Renderer, OnDestroy, OnInit } from '@angular/core';\r\nimport { NodeDraggableService } from './node-draggable.service';\r\nimport { CapturedNode } from './captured-node';\r\nimport { Tree } from '../tree';\r\n\r\n@Directive({\r\n  selector: '[nodeDraggable]'\r\n})\r\nexport class NodeDraggableDirective implements OnDestroy, OnInit {\r\n  public static DATA_TRANSFER_STUB_DATA = 'some browsers enable drag-n-drop only when dataTransfer has data';\r\n\r\n  @Input()\r\n  public nodeDraggable: ElementRef;\r\n\r\n  @Input()\r\n  public tree: Tree;\r\n\r\n  private nodeNativeElement: HTMLElement;\r\n  private disposersForDragListeners: Function[] = [];\r\n\r\n  public constructor(@Inject(ElementRef) public element: ElementRef,\r\n                     @Inject(NodeDraggableService) private nodeDraggableService: NodeDraggableService,\r\n                     @Inject(Renderer) private renderer: Renderer) {\r\n    this.nodeNativeElement = element.nativeElement;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    if (!this.tree.isStatic()) {\r\n      this.renderer.setElementAttribute(this.nodeNativeElement, 'draggable', 'true');\r\n      this.disposersForDragListeners.push(this.renderer.listen(this.nodeNativeElement, 'dragenter', this.handleDragEnter.bind(this)));\r\n      this.disposersForDragListeners.push(this.renderer.listen(this.nodeNativeElement, 'dragover', this.handleDragOver.bind(this)));\r\n      this.disposersForDragListeners.push(this.renderer.listen(this.nodeNativeElement, 'dragstart', this.handleDragStart.bind(this)));\r\n      this.disposersForDragListeners.push(this.renderer.listen(this.nodeNativeElement, 'dragleave', this.handleDragLeave.bind(this)));\r\n      this.disposersForDragListeners.push(this.renderer.listen(this.nodeNativeElement, 'drop', this.handleDrop.bind(this)));\r\n      this.disposersForDragListeners.push(this.renderer.listen(this.nodeNativeElement, 'dragend', this.handleDragEnd.bind(this)));\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    /* tslint:disable:typedef */\r\n    this.disposersForDragListeners.forEach(dispose => dispose());\r\n    /* tslint:enable:typedef */\r\n  }\r\n\r\n  private handleDragStart(e: DragEvent): any {\r\n    e.stopPropagation();\r\n\r\n    this.nodeDraggableService.captureNode(new CapturedNode(this.nodeDraggable, this.tree));\r\n\r\n    e.dataTransfer.setData('text', NodeDraggableDirective.DATA_TRANSFER_STUB_DATA);\r\n    e.dataTransfer.effectAllowed = 'move';\r\n  }\r\n\r\n  private handleDragOver(e: DragEvent): any {\r\n    e.preventDefault();\r\n    e.dataTransfer.dropEffect = 'move';\r\n  }\r\n\r\n  private handleDragEnter(e: DragEvent): any {\r\n    e.preventDefault();\r\n    if (this.containsElementAt(e)) {\r\n      this.addClass('over-drop-target');\r\n    }\r\n  }\r\n\r\n  private handleDragLeave(e: DragEvent): any {\r\n    if (!this.containsElementAt(e)) {\r\n      this.removeClass('over-drop-target');\r\n    }\r\n  }\r\n\r\n  private handleDrop(e: DragEvent): any {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    this.removeClass('over-drop-target');\r\n\r\n    if (!this.isDropPossible(e)) {\r\n      return false;\r\n    }\r\n\r\n    if (this.nodeDraggableService.getCapturedNode()) {\r\n      return this.notifyThatNodeWasDropped();\r\n    }\r\n  }\r\n\r\n  private isDropPossible(e: DragEvent): boolean {\r\n    const capturedNode = this.nodeDraggableService.getCapturedNode();\r\n    return capturedNode\r\n      && capturedNode.canBeDroppedAt(this.nodeDraggable)\r\n      && this.containsElementAt(e);\r\n  }\r\n\r\n  private handleDragEnd(e: DragEvent): any {\r\n    this.removeClass('over-drop-target');\r\n    this.nodeDraggableService.releaseCapturedNode();\r\n  }\r\n\r\n  private containsElementAt(e: DragEvent): boolean {\r\n    const {x = e.clientX, y = e.clientY} = e;\r\n    return this.nodeNativeElement.contains(document.elementFromPoint(x, y));\r\n  }\r\n\r\n  private addClass(className: string): void {\r\n    const classList: DOMTokenList = this.nodeNativeElement.classList;\r\n    classList.add(className);\r\n  }\r\n\r\n  private removeClass(className: string): void {\r\n    const classList: DOMTokenList = this.nodeNativeElement.classList;\r\n    classList.remove(className);\r\n  }\r\n\r\n  private notifyThatNodeWasDropped(): void {\r\n    this.nodeDraggableService.fireNodeDragged(this.nodeDraggableService.getCapturedNode(), this.nodeDraggable);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/ng2-tree/src/draggable/node-draggable.directive.ts","import { Injectable, ElementRef } from '@angular/core';\r\nimport { Subject } from 'rxjs/Rx';\r\nimport { CapturedNode } from './captured-node';\r\nimport { NodeDraggableEvent } from './draggable.events';\r\n\r\n@Injectable()\r\nexport class NodeDraggableService {\r\n  public draggableNodeEvents$: Subject<NodeDraggableEvent> = new Subject<NodeDraggableEvent>();\r\n\r\n  private capturedNode: CapturedNode;\r\n\r\n  public fireNodeDragged(captured: CapturedNode, target: ElementRef): void {\r\n    if (!captured.tree || captured.tree.isStatic()) {\r\n      return;\r\n    }\r\n\r\n    this.draggableNodeEvents$.next(new NodeDraggableEvent(captured, target));\r\n  }\r\n\r\n  public captureNode(node: CapturedNode): void {\r\n    this.capturedNode = node;\r\n  }\r\n\r\n  public getCapturedNode(): CapturedNode {\r\n    return this.capturedNode;\r\n  }\r\n\r\n  public releaseCapturedNode(): void {\r\n    this.capturedNode = null;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/ng2-tree/src/draggable/node-draggable.service.ts","export type NodeEditableEventType = 'blur' | 'keyup';\r\n\r\nexport enum NodeEditableEventAction {\r\n  Cancel\r\n}\r\n\r\nexport interface NodeEditableEvent {\r\n  value: string;\r\n  type: NodeEditableEventType;\r\n  action?: NodeEditableEventAction;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/ng2-tree/src/editable/editable.events.ts","import {\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  EventEmitter,\r\n  HostListener,\r\n  Inject,\r\n  Renderer\r\n} from '@angular/core';\r\nimport { NodeEditableEvent, NodeEditableEventAction } from './editable.events';\r\n\r\n@Directive({\r\n  selector: '[nodeEditable]'\r\n})\r\nexport class NodeEditableDirective implements OnInit {\r\n  /* tslint:disable:no-input-rename */\r\n  @Input('nodeEditable')\r\n  public nodeValue: string;\r\n  /* tslint:enable:no-input-rename */\r\n\r\n  @Output()\r\n  public valueChanged: EventEmitter<NodeEditableEvent> = new EventEmitter<NodeEditableEvent>(false);\r\n\r\n  public constructor(@Inject(Renderer) private renderer: Renderer,\r\n                     @Inject(ElementRef) private elementRef: ElementRef) {\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    const nativeElement = this.elementRef.nativeElement;\r\n    this.renderer.invokeElementMethod(nativeElement, 'focus', []);\r\n    this.renderer.setElementProperty(nativeElement, 'value', this.nodeValue);\r\n  }\r\n\r\n  @HostListener('keyup.enter', ['$event.target.value'])\r\n  public applyNewValue(newNodeValue: string): void {\r\n    this.valueChanged.emit({type: 'keyup', value: newNodeValue});\r\n  }\r\n\r\n  @HostListener('blur', ['$event.target.value'])\r\n  public applyNewValueByLoosingFocus(newNodeValue: string): void {\r\n    this.valueChanged.emit({type: 'blur', value: newNodeValue});\r\n  }\r\n\r\n  @HostListener('keyup.esc')\r\n  public cancelEditing(): void {\r\n    this.valueChanged.emit({\r\n      type: 'keyup',\r\n      value: this.nodeValue,\r\n      action: NodeEditableEventAction.Cancel\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/ng2-tree/src/editable/node-editable.directive.ts","export enum NodeMenuItemAction {\r\n  NewFolder,\r\n  NewTag,\r\n  Rename,\r\n  Remove\r\n}\r\n\r\nexport enum NodeMenuAction {\r\n  Close\r\n}\r\n\r\nexport interface NodeMenuEvent {\r\n  sender: HTMLElement;\r\n  action: NodeMenuAction;\r\n}\r\n\r\nexport interface NodeMenuItemSelectedEvent {\r\n  nodeMenuItemAction: NodeMenuItemAction;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/ng2-tree/src/menu/menu.events.ts","import { Component, EventEmitter, Output, Renderer, Inject, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { NodeMenuService } from './node-menu.service';\r\nimport { NodeMenuItemSelectedEvent, NodeMenuItemAction, NodeMenuAction } from './menu.events';\r\nimport { isLeftButtonClicked, isEscapePressed } from '../utils/event.utils';\r\n\r\n@Component({\r\n  selector: 'node-menu',\r\n  template: `\r\n    <div class=\"node-menu\">\r\n      <ul class=\"node-menu-content\" #menuContainer>\r\n        <li class=\"node-menu-item\" *ngFor=\"let menuItem of availableMenuItems\"\r\n          (click)=\"onMenuItemSelected($event, menuItem)\">\r\n          <div class=\"node-menu-item-icon {{menuItem.cssClass}}\"></div>\r\n          <span class=\"node-menu-item-value\">{{menuItem.name}}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  `\r\n})\r\nexport class NodeMenuComponent implements OnInit, OnDestroy {\r\n  @Output()\r\n  public menuItemSelected: EventEmitter<NodeMenuItemSelectedEvent> = new EventEmitter<NodeMenuItemSelectedEvent>();\r\n\r\n  @ViewChild('menuContainer') public menuContainer: any;\r\n\r\n  public availableMenuItems: NodeMenuItem[] = [\r\n    {\r\n      name: 'New tag',\r\n      action: NodeMenuItemAction.NewTag,\r\n      cssClass: 'new-tag'\r\n    },\r\n    {\r\n      name: 'New folder',\r\n      action: NodeMenuItemAction.NewFolder,\r\n      cssClass: 'new-folder'\r\n    },\r\n    {\r\n      name: 'Rename',\r\n      action: NodeMenuItemAction.Rename,\r\n      cssClass: 'rename'\r\n    },\r\n    {\r\n      name: 'Remove',\r\n      action: NodeMenuItemAction.Remove,\r\n      cssClass: 'remove'\r\n    }\r\n  ];\r\n\r\n  private disposersForGlobalListeners: Function[] = [];\r\n\r\n  public constructor(@Inject(Renderer) private renderer: Renderer,\r\n                     @Inject(NodeMenuService) private nodeMenuService: NodeMenuService) {\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.disposersForGlobalListeners.push(this.renderer.listenGlobal('document', 'keyup', this.closeMenu.bind(this)));\r\n    this.disposersForGlobalListeners.push(this.renderer.listenGlobal('document', 'mousedown', this.closeMenu.bind(this)));\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.disposersForGlobalListeners.forEach((dispose: Function) => dispose());\r\n  }\r\n\r\n  public onMenuItemSelected(e: MouseEvent, selectedMenuItem: NodeMenuItem): void {\r\n    if (isLeftButtonClicked(e)) {\r\n      this.menuItemSelected.emit({nodeMenuItemAction: selectedMenuItem.action});\r\n      this.nodeMenuService.fireMenuEvent(e.target as HTMLElement, NodeMenuAction.Close);\r\n    }\r\n  }\r\n\r\n  private closeMenu(e: MouseEvent | KeyboardEvent): void {\r\n    const mouseClicked = e instanceof MouseEvent;\r\n    // Check if the click is fired on an element inside a menu\r\n    const containingTarget = (this.menuContainer.nativeElement !== e.target && this.menuContainer.nativeElement.contains(e.target));\r\n\r\n    if (mouseClicked && !containingTarget || isEscapePressed(e as KeyboardEvent)) {\r\n      this.nodeMenuService.fireMenuEvent(e.target as HTMLElement, NodeMenuAction.Close);\r\n    }\r\n  }\r\n}\r\n\r\nexport interface NodeMenuItem {\r\n  name: string;\r\n  action: NodeMenuItemAction;\r\n  cssClass: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/ng2-tree/src/menu/node-menu.component.ts","import { Injectable, ElementRef } from '@angular/core';\r\nimport { Subject, Observable } from 'rxjs/Rx';\r\nimport { NodeMenuEvent, NodeMenuAction } from './menu.events';\r\n\r\n@Injectable()\r\nexport class NodeMenuService {\r\n  public nodeMenuEvents$: Subject<NodeMenuEvent> = new Subject<NodeMenuEvent>();\r\n\r\n  public fireMenuEvent(sender: HTMLElement, action: NodeMenuAction): void {\r\n    const nodeMenuEvent: NodeMenuEvent = { sender, action };\r\n    this.nodeMenuEvents$.next(nodeMenuEvent);\r\n  }\r\n\r\n  public hideMenuStream(treeElementRef: ElementRef): Observable<any> {\r\n    return this.nodeMenuEvents$\r\n      .filter((e: NodeMenuEvent) => treeElementRef.nativeElement !== e.sender)\r\n      .filter((e: NodeMenuEvent) => e.action === NodeMenuAction.Close);\r\n  }\r\n\r\n  public hideMenuForAllNodesExcept(treeElementRef: ElementRef): void {\r\n    this.nodeMenuEvents$.next({\r\n      sender: treeElementRef.nativeElement,\r\n      action: NodeMenuAction.Close\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/ng2-tree/src/menu/node-menu.service.ts","import { TreeService } from './tree.service';\r\nimport { Tree } from './tree';\r\nimport { TreeModel } from './tree.types';\r\nimport { NodeMenuItemAction } from './menu/menu.events';\r\nimport { TreeInternalComponent } from './tree-internal.component';\r\nimport { MouseButtons } from './utils/event.utils';\r\n\r\nexport class TreeController {\r\n  private tree: Tree;\r\n  private treeService: TreeService;\r\n\r\n  constructor(private component: TreeInternalComponent) {\r\n    this.tree = this.component.tree;\r\n    this.treeService = this.component.treeService;\r\n  }\r\n\r\n  public select(): void {\r\n    if (!this.isSelected()) {\r\n      this.component.onNodeSelected({ button: MouseButtons.Left });\r\n    }\r\n  }\r\n\r\n  public isSelected(): boolean {\r\n    return this.component.isSelected;\r\n  }\r\n\r\n  public expand(): void {\r\n    if (this.isCollapsed()) {\r\n      this.component.onSwitchFoldingType();\r\n    }\r\n  }\r\n\r\n  public isExpanded(): boolean {\r\n    return this.tree.isNodeExpanded();\r\n  }\r\n\r\n  public collapse(): void {\r\n    if (this.isExpanded()) {\r\n      this.component.onSwitchFoldingType();\r\n    }\r\n  }\r\n\r\n  public isCollapsed(): boolean {\r\n    return this.tree.isNodeCollapsed();\r\n  }\r\n\r\n  public rename(newValue: string): void {\r\n    this.tree.markAsBeingRenamed();\r\n    this.component.applyNewValue({ type: 'keyup', value: newValue });\r\n  }\r\n\r\n  public remove(): void {\r\n    this.component.onMenuItemSelected({ nodeMenuItemAction: NodeMenuItemAction.Remove });\r\n  }\r\n\r\n  public addChild(newNode: TreeModel): void {\r\n    if (this.tree.hasDeferredChildren() && !this.tree.childrenWereLoaded()) {\r\n      return;\r\n    }\r\n\r\n    const newTree = this.tree.createNode(Array.isArray(newNode.children), newNode);\r\n    this.treeService.fireNodeCreated(newTree);\r\n  }\r\n\r\n  public changeNodeId(id: string | number) {\r\n    if (!id) {\r\n      throw Error('You should supply an id!');\r\n    }\r\n\r\n    if (this.treeService.hasController(id)) {\r\n      throw Error(`Controller already exists for the given id: ${id}`);\r\n    }\r\n\r\n    this.treeService.deleteController(this.tree.id);\r\n    this.tree.id = id;\r\n    this.treeService.setController(this.tree.id, this);\r\n  }\r\n\r\n  public reloadChildren(): void {\r\n    this.tree.reloadChildren();\r\n  }\r\n\r\n  public setChildren(children: TreeModel[]): void {\r\n    if (!this.tree.isLeaf()) {\r\n      this.tree.setChildren(children);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/ng2-tree/src/tree-controller.ts","import { Component, ElementRef, TemplateRef, Inject, Input, OnDestroy, OnInit } from '@angular/core';\nimport * as TreeTypes from './tree.types';\nimport { Tree } from './tree';\nimport { TreeController } from './tree-controller';\nimport { NodeMenuService } from './menu/node-menu.service';\nimport { NodeMenuItemAction, NodeMenuItemSelectedEvent } from './menu/menu.events';\nimport { NodeEditableEvent, NodeEditableEventAction } from './editable/editable.events';\nimport { TreeService } from './tree.service';\nimport * as EventUtils from './utils/event.utils';\nimport { NodeDraggableEvent } from './draggable/draggable.events';\nimport { Subscription } from 'rxjs/Subscription';\nimport { get } from './utils/fn.utils';\n\n@Component({\n  selector: 'tree-internal',\n  template: `\n  <ul class=\"tree\" *ngIf=\"tree\" [ngClass]=\"{rootless: isRootHidden()}\">\n    <li>\n      <div class=\"value-container\"\n        [ngClass]=\"{rootless: isRootHidden()}\"\n        [class.selected]=\"isSelected\"\n        (contextmenu)=\"showRightMenu($event)\"\n        [nodeDraggable]=\"element\"\n        [tree]=\"tree\">\n\n        <div class=\"folding\" (click)=\"onSwitchFoldingType()\" [ngClass]=\"tree.foldingCssClass\"></div>\n        <div class=\"node-value\"\n          *ngIf=\"!shouldShowInputForTreeValue()\"\n          [class.node-selected]=\"isSelected\"\n          (click)=\"onNodeSelected($event)\">\n            <div *ngIf=\"tree.nodeTemplate\" class=\"node-template\" [innerHTML]=\"tree.nodeTemplate | safeHtml\"></div>\n            <span *ngIf=\"!template\" class=\"node-name\" [innerHTML]=\"tree.value | safeHtml\"></span>\n            <span class=\"loading-children\" *ngIf=\"tree.childrenAreBeingLoaded()\"></span>\n            <ng-template [ngTemplateOutlet]=\"template\" [ngOutletContext]=\"{ $implicit: tree.node }\"></ng-template>\n        </div>\n\n        <input type=\"text\" class=\"node-value\"\n           *ngIf=\"shouldShowInputForTreeValue()\"\n           [nodeEditable]=\"tree.value\"\n           (valueChanged)=\"applyNewValue($event)\"/>\n\n        <div class=\"node-left-menu\" *ngIf=\"tree.hasLeftMenu()\" (click)=\"showLeftMenu($event)\" [innerHTML]=\"tree.leftMenuTemplate\">\n        </div>\n        <node-menu *ngIf=\"tree.hasLeftMenu() && isLeftMenuVisible\"\n          (menuItemSelected)=\"onMenuItemSelected($event)\">\n        </node-menu>\n      </div>\n\n      <node-menu *ngIf=\"isRightMenuVisible\" (menuItemSelected)=\"onMenuItemSelected($event)\"></node-menu>\n\n      <ng-template [ngIf]=\"tree.isNodeExpanded()\">\n        <tree-internal *ngFor=\"let child of tree.childrenAsync | async\" [tree]=\"child\" [template]=\"template\"></tree-internal>\n      </ng-template>\n    </li>\n  </ul>\n  `\n})\nexport class TreeInternalComponent implements OnInit, OnDestroy {\n  @Input()\n  public tree: Tree;\n\n  @Input()\n  public settings: TreeTypes.Ng2TreeSettings;\n\n  @Input()\n  public template: TemplateRef<any>;\n\n  public isSelected = false;\n  public isRightMenuVisible = false;\n  public isLeftMenuVisible = false;\n  public controller: TreeController;\n\n  private subscriptions: Subscription[] = [];\n\n  public constructor(@Inject(NodeMenuService) private nodeMenuService: NodeMenuService,\n                     @Inject(TreeService) public treeService: TreeService,\n                     @Inject(ElementRef) public element: ElementRef) {\n  }\n\n  public ngOnInit(): void {\n    this.controller = new TreeController(this);\n    if (get(this.tree, 'node.id', '')) {\n      this.treeService.setController(this.tree.node.id, this.controller);\n    }\n\n    this.settings = this.settings || { rootIsVisible: true };\n\n    this.subscriptions.push(this.nodeMenuService.hideMenuStream(this.element)\n      .subscribe(() => {\n        this.isRightMenuVisible = false;\n        this.isLeftMenuVisible = false;\n      }));\n\n    this.subscriptions.push(this.treeService.unselectStream(this.tree)\n      .subscribe(() => this.isSelected = false));\n\n    this.subscriptions.push(this.treeService.draggedStream(this.tree, this.element)\n      .subscribe((e: NodeDraggableEvent) => {\n        if (this.tree.hasSibling(e.captured.tree)) {\n          this.swapWithSibling(e.captured.tree, this.tree);\n        } else if (this.tree.isBranch()) {\n          this.moveNodeToThisTreeAndRemoveFromPreviousOne(e, this.tree);\n        } else {\n          this.moveNodeToParentTreeAndRemoveFromPreviousOne(e, this.tree);\n        }\n      }));\n  }\n\n  public ngOnDestroy(): void {\n    if (get(this.tree, 'node.id', '')) {\n      this.treeService.deleteController(this.tree.node.id);\n    }\n\n    this.subscriptions.forEach(sub => sub && sub.unsubscribe());\n  }\n\n  private swapWithSibling(sibling: Tree, tree: Tree): void {\n    tree.swapWithSibling(sibling);\n    this.treeService.fireNodeMoved(sibling, sibling.parent);\n  }\n\n  private moveNodeToThisTreeAndRemoveFromPreviousOne(e: NodeDraggableEvent, tree: Tree): void {\n    this.treeService.fireNodeRemoved(e.captured.tree);\n    const addedChild = tree.addChild(e.captured.tree);\n    this.treeService.fireNodeMoved(addedChild, e.captured.tree.parent);\n  }\n\n  private moveNodeToParentTreeAndRemoveFromPreviousOne(e: NodeDraggableEvent, tree: Tree): void {\n    this.treeService.fireNodeRemoved(e.captured.tree);\n    const addedSibling = tree.addSibling(e.captured.tree, tree.positionInParent);\n    this.treeService.fireNodeMoved(addedSibling, e.captured.tree.parent);\n  }\n\n  public onNodeSelected(e: { button: number }): void {\n    if (EventUtils.isLeftButtonClicked(e as MouseEvent)) {\n      this.isSelected = true;\n      this.treeService.fireNodeSelected(this.tree);\n    }\n  }\n\n  public showRightMenu(e: MouseEvent): void {\n    if (!this.tree.hasRightMenu()) {\n      return;\n    }\n\n    if (EventUtils.isRightButtonClicked(e)) {\n      this.isRightMenuVisible = !this.isRightMenuVisible;\n      this.nodeMenuService.hideMenuForAllNodesExcept(this.element);\n    }\n    e.preventDefault();\n  }\n\n  public showLeftMenu(e: MouseEvent): void {\n    if (!this.tree.hasLeftMenu()) {\n      return;\n    }\n\n    if (EventUtils.isLeftButtonClicked(e)) {\n      this.isLeftMenuVisible = !this.isLeftMenuVisible;\n      this.nodeMenuService.hideMenuForAllNodesExcept(this.element);\n      if (this.isLeftMenuVisible) {\n        e.preventDefault();\n      }\n    }\n  }\n\n  public onMenuItemSelected(e: NodeMenuItemSelectedEvent): void {\n    switch (e.nodeMenuItemAction) {\n      case NodeMenuItemAction.NewTag:\n        this.onNewSelected(e);\n        break;\n      case NodeMenuItemAction.NewFolder:\n        this.onNewSelected(e);\n        break;\n      case NodeMenuItemAction.Rename:\n        this.onRenameSelected();\n        break;\n      case NodeMenuItemAction.Remove:\n        this.onRemoveSelected();\n        break;\n      default:\n        throw new Error(`Chosen menu item doesn't exist`);\n    }\n  }\n\n  private onNewSelected(e: NodeMenuItemSelectedEvent): void {\n    this.tree.createNode(e.nodeMenuItemAction === NodeMenuItemAction.NewFolder);\n    this.isRightMenuVisible = false;\n    this.isLeftMenuVisible = false;\n  }\n\n  private onRenameSelected(): void {\n    this.tree.markAsBeingRenamed();\n    this.isRightMenuVisible = false;\n    this.isLeftMenuVisible = false;\n  }\n\n  private onRemoveSelected(): void {\n    this.treeService.deleteController(get(this.tree, 'node.id', ''));\n    this.treeService.fireNodeRemoved(this.tree);\n  }\n\n  public onSwitchFoldingType(): void {\n    this.tree.switchFoldingType();\n    this.treeService.fireNodeSwitchFoldingType(this.tree);\n  }\n\n  public applyNewValue(e: NodeEditableEvent): void {\n    if ((e.action === NodeEditableEventAction.Cancel || this.tree.isNew()) && Tree.isValueEmpty(e.value)) {\n      return this.treeService.fireNodeRemoved(this.tree);\n    }\n\n    if (this.tree.isNew()) {\n      this.tree.value = e.value;\n      this.treeService.fireNodeCreated(this.tree);\n    }\n\n    if (this.tree.isBeingRenamed()) {\n      const oldValue = this.tree.value;\n      this.tree.value = e.value;\n      this.treeService.fireNodeRenamed(oldValue, this.tree);\n    }\n\n    this.tree.markAsModified();\n  }\n\n  public shouldShowInputForTreeValue(): boolean {\n    return this.tree.isNew() || this.tree.isBeingRenamed();\n  }\n\n  public isRootHidden(): boolean {\n    return this.tree.isRoot() && !this.settings.rootIsVisible;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/ng2-tree/src/tree-internal.component.ts","import {\n  Input, Component, OnInit, EventEmitter, Output, Inject, OnChanges, SimpleChanges, ViewChild,\n  OnDestroy, TemplateRef, ContentChild\n} from '@angular/core';\nimport { TreeService } from './tree.service';\nimport * as TreeTypes from './tree.types';\nimport { NodeEvent } from './tree.events';\nimport { Tree } from './tree';\nimport { TreeController } from './tree-controller';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'tree',\n  template: `<tree-internal #rootComponent [tree]=\"tree\" [settings]=\"settings\" [template]=\"template\"></tree-internal>`,\n  providers: [TreeService]\n})\nexport class TreeComponent implements OnInit, OnChanges, OnDestroy {\n  private static EMPTY_TREE: Tree = new Tree({value: ''});\n\n  /* tslint:disable:no-input-rename */\n  @Input('tree')\n  public treeModel: TreeTypes.TreeModel;\n  /* tslint:enable:no-input-rename */\n\n  @Input()\n  public settings: TreeTypes.Ng2TreeSettings;\n\n  @Output()\n  public nodeCreated: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  public nodeRemoved: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  public nodeRenamed: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  public nodeSelected: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  public nodeMoved: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  public nodeExpanded: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  public nodeCollapsed: EventEmitter<any> = new EventEmitter();\n\n  public tree: Tree;\n  @ViewChild('rootComponent') public rootComponent;\n\n  @ContentChild(TemplateRef) public template;\n\n  private subscriptions: Subscription[] = [];\n\n  public constructor(@Inject(TreeService) private treeService: TreeService) {\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (!this.treeModel) {\n      this.tree = TreeComponent.EMPTY_TREE;\n    } else {\n      this.tree = new Tree(this.treeModel);\n    }\n  }\n\n  public ngOnInit(): void {\n    this.subscriptions.push(this.treeService.nodeRemoved$.subscribe((e: NodeEvent) => {\n      this.nodeRemoved.emit(e);\n    }));\n\n    this.subscriptions.push(this.treeService.nodeRenamed$.subscribe((e: NodeEvent) => {\n      this.nodeRenamed.emit(e);\n    }));\n\n    this.subscriptions.push(this.treeService.nodeCreated$.subscribe((e: NodeEvent) => {\n      this.nodeCreated.emit(e);\n    }));\n\n    this.subscriptions.push(this.treeService.nodeSelected$.subscribe((e: NodeEvent) => {\n      this.nodeSelected.emit(e);\n    }));\n\n    this.subscriptions.push(this.treeService.nodeMoved$.subscribe((e: NodeEvent) => {\n      this.nodeMoved.emit(e);\n    }));\n\n    this.subscriptions.push(this.treeService.nodeExpanded$.subscribe((e: NodeEvent) => {\n      this.nodeExpanded.emit(e);\n    }));\n\n    this.subscriptions.push(this.treeService.nodeCollapsed$.subscribe((e: NodeEvent) => {\n      this.nodeCollapsed.emit(e);\n    }));\n  }\n\n  public getController(): TreeController {\n    return this.rootComponent.controller;\n  }\n\n  public getControllerByNodeId(id: number | string): TreeController {\n    return this.treeService.getController(id);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub && sub.unsubscribe());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/ng2-tree/src/tree.component.ts","import { Tree } from './tree';\r\nimport { TreeController } from './tree-controller';\r\nimport { RenamableNode } from './tree.types';\r\n\r\nexport class NodeEvent {\r\n  public constructor(public node: Tree) {\r\n  }\r\n}\r\n\r\nexport class NodeSelectedEvent extends NodeEvent {\r\n  public constructor(node: Tree) {\r\n    super(node);\r\n  }\r\n}\r\n\r\nexport class NodeDestructiveEvent extends NodeEvent {\r\n  public constructor(node: Tree) {\r\n    super(node);\r\n  }\r\n}\r\n\r\nexport class NodeMovedEvent extends NodeDestructiveEvent {\r\n  public constructor(node: Tree, public previousParent: Tree) {\r\n    super(node);\r\n  }\r\n}\r\n\r\nexport class NodeRemovedEvent extends NodeDestructiveEvent {\r\n  public constructor(node: Tree, public lastIndex: number) {\r\n    super(node);\r\n  }\r\n}\r\n\r\nexport class NodeCreatedEvent extends NodeDestructiveEvent {\r\n  public constructor(node: Tree) {\r\n    super(node);\r\n  }\r\n}\r\n\r\nexport class NodeRenamedEvent extends NodeDestructiveEvent {\r\n  public constructor(node: Tree, public oldValue: string | RenamableNode, public newValue: string | RenamableNode) {\r\n    super(node);\r\n  }\r\n}\r\n\r\nexport class NodeExpandedEvent extends NodeEvent {\r\n  public constructor(node: Tree) {\r\n    super(node);\r\n  }\r\n}\r\n\r\nexport class NodeCollapsedEvent extends NodeEvent {\r\n  public constructor(node: Tree) {\r\n    super(node);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/ng2-tree/src/tree.events.ts","import { NgModule } from '@angular/core';\r\nimport { TreeComponent } from './tree.component';\r\nimport { TreeInternalComponent } from './tree-internal.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NodeDraggableDirective } from './draggable/node-draggable.directive';\r\nimport { NodeDraggableService } from './draggable/node-draggable.service';\r\nimport { NodeEditableDirective } from './editable/node-editable.directive';\r\nimport { NodeMenuComponent } from './menu/node-menu.component';\r\nimport { NodeMenuService } from './menu/node-menu.service';\r\nimport { TreeService } from './tree.service';\r\nimport { SafeHtmlPipe } from './utils/safe-html.pipe';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [\r\n    NodeDraggableDirective,\r\n    TreeComponent,\r\n    NodeEditableDirective,\r\n    NodeMenuComponent,\r\n    TreeInternalComponent,\r\n    SafeHtmlPipe\r\n  ],\r\n  exports: [TreeComponent],\r\n  providers: [NodeDraggableService, NodeMenuService, TreeService]\r\n})\r\nexport class TreeModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/ng2-tree/src/tree.module.ts","import {\r\n  NodeCollapsedEvent,\r\n  NodeCreatedEvent,\r\n  NodeExpandedEvent,\r\n  NodeMovedEvent,\r\n  NodeRemovedEvent,\r\n  NodeRenamedEvent,\r\n  NodeSelectedEvent\r\n} from './tree.events';\r\nimport { RenamableNode } from './tree.types';\r\nimport { Tree } from './tree';\r\nimport { TreeController } from './tree-controller';\r\nimport { Observable, Subject } from 'rxjs/Rx';\r\nimport { ElementRef, Inject, Injectable } from '@angular/core';\r\nimport { NodeDraggableService } from './draggable/node-draggable.service';\r\nimport { NodeDraggableEvent } from './draggable/draggable.events';\r\n\r\n@Injectable()\r\nexport class TreeService {\r\n  public nodeMoved$: Subject<NodeMovedEvent> = new Subject<NodeMovedEvent>();\r\n  public nodeRemoved$: Subject<NodeRemovedEvent> = new Subject<NodeRemovedEvent>();\r\n  public nodeRenamed$: Subject<NodeRenamedEvent> = new Subject<NodeRenamedEvent>();\r\n  public nodeCreated$: Subject<NodeCreatedEvent> = new Subject<NodeCreatedEvent>();\r\n  public nodeSelected$: Subject<NodeSelectedEvent> = new Subject<NodeSelectedEvent>();\r\n  public nodeExpanded$: Subject<NodeExpandedEvent> = new Subject<NodeExpandedEvent>();\r\n  public nodeCollapsed$: Subject<NodeCollapsedEvent> = new Subject<NodeCollapsedEvent>();\r\n\r\n  private controllers: Map<string | number, TreeController> = new Map();\r\n\r\n  public constructor(@Inject(NodeDraggableService) private nodeDraggableService: NodeDraggableService) {\r\n    this.nodeRemoved$.subscribe((e: NodeRemovedEvent) => e.node.removeItselfFromParent());\r\n  }\r\n\r\n  public unselectStream(tree: Tree): Observable<any> {\r\n    return this.nodeSelected$.filter((e: NodeSelectedEvent) => tree !== e.node);\r\n  }\r\n\r\n  public fireNodeRemoved(tree: Tree): void {\r\n    this.nodeRemoved$.next(new NodeRemovedEvent(tree, tree.positionInParent));\r\n  }\r\n\r\n  public fireNodeCreated(tree: Tree): void {\r\n    this.nodeCreated$.next(new NodeCreatedEvent(tree));\r\n  }\r\n\r\n  public fireNodeSelected(tree: Tree): void {\r\n    this.nodeSelected$.next(new NodeSelectedEvent(tree));\r\n  }\r\n\r\n  public fireNodeRenamed(oldValue: RenamableNode | string, tree: Tree): void {\r\n    this.nodeRenamed$.next(new NodeRenamedEvent(tree, oldValue, tree.value));\r\n  }\r\n\r\n  public fireNodeMoved(tree: Tree, parent: Tree): void {\r\n    this.nodeMoved$.next(new NodeMovedEvent(tree, parent));\r\n  }\r\n\r\n  public fireNodeSwitchFoldingType(tree: Tree): void {\r\n    if (tree.isNodeExpanded()) {\r\n      this.fireNodeExpanded(tree);\r\n    } else if (tree.isNodeCollapsed()) {\r\n      this.fireNodeCollapsed(tree);\r\n    }\r\n  }\r\n\r\n  private fireNodeExpanded(tree: Tree): void {\r\n    this.nodeExpanded$.next(new NodeExpandedEvent(tree));\r\n  }\r\n\r\n  private fireNodeCollapsed(tree: Tree): void {\r\n    this.nodeCollapsed$.next(new NodeCollapsedEvent(tree));\r\n  }\r\n\r\n  public draggedStream(tree: Tree, element: ElementRef): Observable<NodeDraggableEvent> {\r\n    return this.nodeDraggableService.draggableNodeEvents$\r\n      .filter((e: NodeDraggableEvent) => e.target === element)\r\n      .filter((e: NodeDraggableEvent) => !e.captured.tree.hasChild(tree));\r\n  }\r\n\r\n  public setController(id: string | number, controller: TreeController): void {\r\n    this.controllers.set(id, controller);\r\n  }\r\n\r\n  public deleteController(id: string | number): void {\r\n    if (this.controllers.has(id)) {\r\n      this.controllers.delete(id);\r\n    }\r\n  }\r\n\r\n  public getController(id: string | number): TreeController {\r\n    if (this.controllers.has(id)) {\r\n      return this.controllers.get(id);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  public hasController(id: string | number): boolean {\r\n    return this.controllers.has(id);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/ng2-tree/src/tree.service.ts","import {\r\n  isEmpty,\r\n  trim,\r\n  has,\r\n  isFunction,\r\n  get,\r\n  omit,\r\n  size,\r\n  once,\r\n  includes,\r\n  isNil\r\n} from './utils/fn.utils';\r\n\r\nimport { Observable, Observer } from 'rxjs/Rx';\r\nimport { TreeModel, RenamableNode, FoldingType, TreeStatus, TreeModelSettings, ChildrenLoadingFunction } from './tree.types';\r\n\r\nenum ChildrenLoadingState {\r\n  NotStarted,\r\n  Loading,\r\n  Completed\r\n}\r\n\r\nexport class Tree {\r\n  private _children: Tree[];\r\n  private _loadChildren: ChildrenLoadingFunction;\r\n  private _childrenLoadingState: ChildrenLoadingState = ChildrenLoadingState.NotStarted;\r\n\r\n  private _childrenAsyncOnce: () => Observable<Tree[]> = once(() => {\r\n    return new Observable((observer: Observer<Tree[]>) => {\r\n      setTimeout(() => {\r\n        this._childrenLoadingState = ChildrenLoadingState.Loading;\r\n        this._loadChildren((children: TreeModel[]) => {\r\n          this._children = (children || []).map((child: TreeModel) => new Tree(child, this));\r\n          this._childrenLoadingState = ChildrenLoadingState.Completed;\r\n          observer.next(this.children);\r\n          observer.complete();\r\n        });\r\n      });\r\n    });\r\n  });\r\n\r\n  public node: TreeModel;\r\n  public parent: Tree;\r\n\r\n  // STATIC METHODS ----------------------------------------------------------------------------------------------------\r\n\r\n  /**\r\n   * Check that value passed is not empty (it doesn't consist of only whitespace symbols).\r\n   * @param {string} value - A value that should be checked.\r\n   * @returns {boolean} - A flag indicating that value is empty or not.\r\n   * @static\r\n   */\r\n  public static isValueEmpty(value: string): boolean {\r\n    return isEmpty(trim(value));\r\n  }\r\n\r\n  /**\r\n   * Check whether a given value can be considered RenamableNode.\r\n   * @param {any} value - A value to check.\r\n   * @returns {boolean} - A flag indicating whether given value is Renamable node or not.\r\n   * @static\r\n   */\r\n  public static isRenamable(value: any): value is RenamableNode {\r\n    return (has(value, 'setName') && isFunction(value.setName))\r\n      && (has(value, 'toString') && isFunction(value.toString) && value.toString !== Object.toString);\r\n  }\r\n\r\n  private static cloneTreeShallow(origin: Tree): Tree {\r\n    const tree = new Tree(Object.assign({}, origin.node));\r\n    tree._children = origin._children;\r\n    return tree;\r\n  }\r\n\r\n  private static applyNewValueToRenamable(value: RenamableNode, newValue: string): RenamableNode {\r\n    const renamableValue: RenamableNode = Object.assign({}, value as RenamableNode);\r\n    renamableValue.setName(newValue);\r\n    return renamableValue;\r\n  }\r\n\r\n  /**\r\n   * Build an instance of Tree from an object implementing TreeModel interface.\r\n   * @param {TreeModel} model - A model that is used to build a tree.\r\n   * @param {Tree} [parent] - An optional parent if you want to build a tree from the model that should be a child of an existing Tree instance.\r\n   * @param {boolean} [isBranch] - An option that makes a branch from created tree. Branch can have children.\r\n   */\r\n  public constructor(node: TreeModel, parent: Tree = null, isBranch: boolean = false) {\r\n    this.buildTreeFromModel(node, parent, isBranch || Array.isArray(node.children));\r\n  }\r\n\r\n  private buildTreeFromModel(model: TreeModel, parent: Tree, isBranch: boolean): void {\r\n    this.parent = parent;\r\n    this.node = Object.assign(omit(model, 'children') as TreeModel, {\r\n      settings: TreeModelSettings.merge(model, get(parent, 'node') as TreeModel)\r\n    }) as TreeModel;\r\n\r\n    if (isFunction(this.node.loadChildren)) {\r\n      this._loadChildren = this.node.loadChildren;\r\n    } else {\r\n      get(model, 'children', []).forEach((child: TreeModel, index: number) => {\r\n        this._addChild(new Tree(child, this), index);\r\n      });\r\n    }\r\n\r\n    if (!Array.isArray(this._children)) {\r\n      this._children = this.node.loadChildren || isBranch ? [] : null;\r\n    }\r\n  }\r\n\r\n  public hasDeferredChildren(): boolean {\r\n    return typeof this._loadChildren === 'function';\r\n  }\r\n\r\n  /**\r\n   * Check whether children of the node are being loaded.\r\n   * Makes sense only for nodes that define `loadChildren` function.\r\n   * @returns {boolean} A flag indicating that children are being loaded.\r\n   */\r\n  public childrenAreBeingLoaded(): boolean {\r\n    return (this._childrenLoadingState === ChildrenLoadingState.Loading);\r\n  }\r\n\r\n  /**\r\n   * Check whether children of the node were loaded.\r\n   * Makes sense only for nodes that define `loadChildren` function.\r\n   * @returns {boolean} A flag indicating that children were loaded.\r\n   */\r\n  public childrenWereLoaded(): boolean {\r\n    return (this._childrenLoadingState === ChildrenLoadingState.Completed);\r\n  }\r\n\r\n  private canLoadChildren(): boolean {\r\n    return (this._childrenLoadingState === ChildrenLoadingState.NotStarted)\r\n      && (this.foldingType === FoldingType.Expanded)\r\n      && (!!this._loadChildren);\r\n  }\r\n\r\n  /**\r\n   * Check whether children of the node should be loaded and not loaded yet.\r\n   * Makes sense only for nodes that define `loadChildren` function.\r\n   * @returns {boolean} A flag indicating that children should be loaded for the current node.\r\n   */\r\n  public childrenShouldBeLoaded(): boolean {\r\n    return !!this._loadChildren;\r\n  }\r\n\r\n  /**\r\n   * Get children of the current tree.\r\n   * @returns {Tree[]} The children of the current tree.\r\n   */\r\n  public get children(): Tree[] {\r\n    return this._children;\r\n  }\r\n\r\n  /**\r\n   * By getting value from this property you start process of loading node's children using `loadChildren` function.\r\n   * Once children are loaded `loadChildren` function won't be called anymore and loaded for the first time children are emitted in case of subsequent calls.\r\n   * @returns {Observable<Tree[]>} An observable which emits children once they are loaded.\r\n   */\r\n  public get childrenAsync(): Observable<Tree[]> {\r\n    if (this.canLoadChildren()) {\r\n      return this._childrenAsyncOnce();\r\n    }\r\n    return Observable.of(this.children);\r\n  }\r\n\r\n  /**\r\n   * By calling this method you start process of loading node's children using `loadChildren` function.\r\n   */\r\n  public reloadChildren(): void {\r\n    if (this.childrenShouldBeLoaded()) {\r\n      this._childrenLoadingState = ChildrenLoadingState.Loading;\r\n      this._loadChildren((children: TreeModel[]) => {\r\n        this._children = children && children.map((child: TreeModel) => new Tree(child, this));\r\n        this._childrenLoadingState = ChildrenLoadingState.Completed;\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * By calling this method you will remove all current children of a treee and create new.\r\n   */\r\n  public setChildren(children: Array<TreeModel>): void {\r\n    this._children = children && children.map((child: TreeModel) => new Tree(child, this));\r\n    if (this.childrenShouldBeLoaded()) {\r\n      this._childrenLoadingState = ChildrenLoadingState.Completed;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create a new node in the current tree.\r\n   * @param {boolean} isBranch - A flag that indicates whether a new node should be a \"Branch\". \"Leaf\" node will be created by default\r\n   * @param {TreeModel} model - Tree model of the new node which will be inserted. Empty node will be created by default and it will fire edit mode of this node\r\n   * @returns {Tree} A newly created child node.\r\n   */\r\n  public createNode(isBranch: boolean, model: TreeModel = { value: '' }): Tree {\r\n    const tree = new Tree(model, this, isBranch);\r\n    if (!model.id) {\r\n      tree.markAsNew();\r\n    }\r\n\r\n    if (this.childrenShouldBeLoaded() && !(this.childrenAreBeingLoaded() || this.childrenWereLoaded())) {\r\n      return null;\r\n    }\r\n    if (this.isLeaf()) {\r\n      return this.addSibling(tree);\r\n    } else {\r\n      return this.addChild(tree);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the value of the current node\r\n   * @returns {(string|RenamableNode)} The value of the node.\r\n   */\r\n  public get value(): any {\r\n    return this.node.value;\r\n  }\r\n\r\n  /**\r\n   * Set the value of the current node\r\n   * @param {(string|RenamableNode)} value - The new value of the node.\r\n   */\r\n  public set value(value: any) {\r\n    if (typeof value !== 'string' && !Tree.isRenamable(value)) {\r\n      return;\r\n    }\r\n\r\n    const stringifiedValue = '' + value;\r\n    if (Tree.isRenamable(this.value)) {\r\n      this.node.value = Tree.applyNewValueToRenamable(this.value as RenamableNode, stringifiedValue);\r\n    } else {\r\n      this.node.value = Tree.isValueEmpty(stringifiedValue) ? this.node.value : stringifiedValue;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a sibling node for the current node. This won't work if the current node is a root.\r\n   * @param {Tree} sibling - A node that should become a sibling.\r\n   * @param [number] position - Position in which sibling will be inserted. By default it will be inserted at the last position in a parent.\r\n   * @returns {Tree} A newly inserted sibling, or null if you are trying to make a sibling for the root.\r\n   */\r\n  public addSibling(sibling: Tree, position?: number): Tree {\r\n    if (Array.isArray(get(this.parent, 'children'))) {\r\n      return this.parent.addChild(sibling, position);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Add a child node for the current node.\r\n   * @param {Tree} child - A node that should become a child.\r\n   * @param [number] position - Position in which child will be inserted. By default it will be inserted at the last position in a parent.\r\n   * @returns {Tree} A newly inserted child.\r\n   */\r\n  public addChild(child: Tree, position?: number): Tree {\r\n    return this._addChild(Tree.cloneTreeShallow(child), position);\r\n  }\r\n\r\n  private _addChild(child: Tree, position: number = size(this._children) || 0): Tree {\r\n    child.parent = this;\r\n\r\n    if (Array.isArray(this._children)) {\r\n      this._children.splice(position, 0, child);\r\n    } else {\r\n      this._children = [child];\r\n    }\r\n\r\n    this._setFoldingType();\r\n    if (this.isNodeCollapsed()) {\r\n      this.switchFoldingType();\r\n    }\r\n    return child;\r\n  }\r\n\r\n  /**\r\n   * Swap position of the current node with the given sibling. If node passed as a parameter is not a sibling - nothing happens.\r\n   * @param {Tree} sibling - A sibling with which current node shold be swapped.\r\n   */\r\n  public swapWithSibling(sibling: Tree): void {\r\n    if (!this.hasSibling(sibling)) {\r\n      return;\r\n    }\r\n\r\n    const siblingIndex = sibling.positionInParent;\r\n    const thisTreeIndex = this.positionInParent;\r\n\r\n    this.parent._children[siblingIndex] = this;\r\n    this.parent._children[thisTreeIndex] = sibling;\r\n  }\r\n\r\n  /**\r\n   * Get a node's position in its parent.\r\n   * @returns {number} The position inside a parent.\r\n   */\r\n  public get positionInParent(): number {\r\n    if (this.isRoot()) {\r\n      return -1;\r\n    }\r\n\r\n    return this.parent.children ? this.parent.children.indexOf(this) : -1;\r\n  }\r\n\r\n  /**\r\n   * Check whether or not this tree is static.\r\n   * @returns {boolean} A flag indicating whether or not this tree is static.\r\n   */\r\n  public isStatic(): boolean {\r\n    return get(this.node.settings, 'static', false);\r\n  }\r\n\r\n  /**\r\n   * Check whether or not this tree has a left menu.\r\n   * @returns {boolean} A flag indicating whether or not this tree has a left menu.\r\n   */\r\n  public hasLeftMenu(): boolean {\r\n    return !get(this.node.settings, 'static', false) && get(this.node.settings, 'leftMenu', false);\r\n  }\r\n\r\n  /**\r\n   * Check whether or not this tree has a right menu.\r\n   * @returns {boolean} A flag indicating whether or not this tree has a right menu.\r\n   */\r\n  public hasRightMenu(): boolean {\r\n    return !get(this.node.settings, 'static', false) && get(this.node.settings, 'rightMenu', false);\r\n  }\r\n\r\n  /**\r\n   * Check whether this tree is \"Leaf\" or not.\r\n   * @returns {boolean} A flag indicating whether or not this tree is a \"Leaf\".\r\n   */\r\n  public isLeaf(): boolean {\r\n    return !this.isBranch();\r\n  }\r\n\r\n  /**\r\n   * Check whether this tree is \"Branch\" or not. \"Branch\" is a node that has children.\r\n   * @returns {boolean} A flag indicating whether or not this tree is a \"Branch\".\r\n   */\r\n  public isBranch(): boolean {\r\n    return Array.isArray(this._children);\r\n  }\r\n\r\n  /**\r\n   * Check whether this tree has children.\r\n   * @returns {boolean} A flag indicating whether or not this tree has children.\r\n   */\r\n  public hasChildren(): boolean {\r\n    return !isEmpty(this._children) || this.childrenShouldBeLoaded();\r\n  }\r\n\r\n  /**\r\n   * Check whether this tree is a root or not. The root is the tree (node) that doesn't have parent (or technically its parent is null).\r\n   * @returns {boolean} A flag indicating whether or not this tree is the root.\r\n   */\r\n  public isRoot(): boolean {\r\n    return isNil(this.parent);\r\n  }\r\n\r\n  /**\r\n   * Check whether provided tree is a sibling of the current tree. Sibling trees (nodes) are the trees that have the same parent.\r\n   * @param {Tree} tree - A tree that should be tested on a siblingness.\r\n   * @returns {boolean} A flag indicating whether or not provided tree is the sibling of the current one.\r\n   */\r\n  public hasSibling(tree: Tree): boolean {\r\n    return !this.isRoot() && includes(this.parent.children, tree);\r\n  }\r\n\r\n  /**\r\n   * Check whether provided tree is a child of the current tree.\r\n   * This method tests that provided tree is a <strong>direct</strong> child of the current tree.\r\n   * @param {Tree} tree - A tree that should be tested (child candidate).\r\n   * @returns {boolean} A flag indicating whether provided tree is a child or not.\r\n   */\r\n  public hasChild(tree: Tree): boolean {\r\n    return includes(this._children, tree);\r\n  }\r\n\r\n  /**\r\n   * Remove given tree from the current tree.\r\n   * The given tree will be removed only in case it is a direct child of the current tree (@see {@link hasChild}).\r\n   * @param {Tree} tree - A tree that should be removed.\r\n   */\r\n  public removeChild(tree: Tree): void {\r\n    if (!this.hasChildren()) {\r\n      return;\r\n    }\r\n\r\n    const childIndex = this._children.findIndex((child: Tree) => child === tree);\r\n    if (childIndex >= 0) {\r\n      this._children.splice(childIndex, 1);\r\n    }\r\n    this._setFoldingType();\r\n  }\r\n\r\n  /**\r\n   * Remove current tree from its parent.\r\n   */\r\n  public removeItselfFromParent(): void {\r\n    if (!this.parent) {\r\n      return;\r\n    }\r\n\r\n    this.parent.removeChild(this);\r\n  }\r\n\r\n  /**\r\n   * Switch folding type of the current tree. \"Leaf\" node cannot switch its folding type cause it doesn't have children, hence nothing to fold.\r\n   * If node is a \"Branch\" and it is expanded, then by invoking current method state of the tree should be switched to \"collapsed\" and vice versa.\r\n   */\r\n  public switchFoldingType(): void {\r\n    if (this.isLeaf() || !this.hasChildren()) {\r\n      return;\r\n    }\r\n\r\n    this.node._foldingType = this.isNodeExpanded() ? FoldingType.Collapsed : FoldingType.Expanded;\r\n  }\r\n\r\n  /**\r\n   * Check that tree is expanded.\r\n   * @returns {boolean} A flag indicating whether current tree is expanded. Always returns false for the \"Leaf\" tree and for an empty tree.\r\n   */\r\n  public isNodeExpanded(): boolean {\r\n    return this.foldingType === FoldingType.Expanded;\r\n  }\r\n\r\n  /**\r\n   * Check that tree is collapsed.\r\n   * @returns {boolean} A flag indicating whether current tree is collapsed. Always returns false for the \"Leaf\" tree and for an empty tree.\r\n   */\r\n  public isNodeCollapsed(): boolean {\r\n    return this.foldingType === FoldingType.Collapsed;\r\n  }\r\n\r\n  /**\r\n   * Set a current folding type: expanded, collapsed or leaf.\r\n   */\r\n  private _setFoldingType(): void {\r\n    if (this.childrenShouldBeLoaded()) {\r\n      this.node._foldingType = FoldingType.Collapsed;\r\n    } else if (this._children && !isEmpty(this._children)) {\r\n      this.node._foldingType = FoldingType.Expanded;\r\n    } else if (Array.isArray(this._children)) {\r\n      this.node._foldingType = FoldingType.Empty;\r\n    } else {\r\n      this.node._foldingType = FoldingType.Leaf;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get a current folding type: expanded, collapsed or leaf.\r\n   * @returns {FoldingType} A folding type of the current tree.\r\n   */\r\n  public get foldingType(): FoldingType {\r\n    if (!this.node._foldingType) {\r\n      this._setFoldingType();\r\n    }\r\n    return this.node._foldingType;\r\n  }\r\n\r\n  /**\r\n   * Get a css class for element which displayes folding state - expanded, collapsed or leaf\r\n   * @returns {string} A string icontaining css class (classes)\r\n   */\r\n  public get foldingCssClass(): string {\r\n    return this.getCssClassesFromSettings() || this.foldingType.cssClass;\r\n  }\r\n\r\n  private getCssClassesFromSettings(): string {\r\n    if (!this.node._foldingType) {\r\n      this._setFoldingType();\r\n    }\r\n\r\n    if (this.node._foldingType === FoldingType.Collapsed) {\r\n      return get(this.node.settings, 'cssClasses.collapsed', null);\r\n    } else if (this.node._foldingType === FoldingType.Expanded) {\r\n      return get(this.node.settings, 'cssClasses.expanded', null);\r\n    } else if (this.node._foldingType === FoldingType.Empty) {\r\n      return get(this.node.settings, 'cssClasses.empty', null);\r\n    }\r\n\r\n    return get(this.node.settings, 'cssClasses.leaf', null);\r\n  }\r\n\r\n  /**\r\n   * Get a html template to render before every node's name.\r\n   * @returns {string} A string representing a html template.\r\n   */\r\n  public get nodeTemplate(): string {\r\n    return this.getTemplateFromSettings();\r\n  }\r\n\r\n  private getTemplateFromSettings(): string {\r\n    if (this.isLeaf()) {\r\n      return get(this.node.settings, 'templates.leaf', '');\r\n    } else {\r\n      return get(this.node.settings, 'templates.node', '');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get a html template to render for an element activatin left menu of a node.\r\n   * @returns {string} A string representing a html template.\r\n   */\r\n  public get leftMenuTemplate(): string {\r\n    if (this.hasLeftMenu()) {\r\n      return get(this.node.settings, 'templates.leftMenu', '<span></span>');\r\n    }\r\n    return '';\r\n  }\r\n\r\n  /**\r\n   * Check that current tree is newly created (added by user via menu for example). Tree that was built from the TreeModel is not marked as new.\r\n   * @returns {boolean} A flag whether the tree is new.\r\n   */\r\n  public isNew(): boolean {\r\n    return this.node._status === TreeStatus.New;\r\n  }\r\n\r\n  public get id(): number | string {\r\n    return get(this.node, 'id');\r\n  }\r\n\r\n  public set id(id: number | string) {\r\n    this.node.id = id;\r\n  }\r\n\r\n  /**\r\n   * Mark current tree as new (@see {@link isNew}).\r\n   */\r\n  public markAsNew(): void {\r\n    this.node._status = TreeStatus.New;\r\n  }\r\n\r\n  /**\r\n   * Check that current tree is being renamed (it is in the process of its value renaming initiated by a user).\r\n   * @returns {boolean} A flag whether the tree is being renamed.\r\n   */\r\n  public isBeingRenamed(): boolean {\r\n    return this.node._status === TreeStatus.IsBeingRenamed;\r\n  }\r\n\r\n  /**\r\n   * Mark current tree as being renamed (@see {@link isBeingRenamed}).\r\n   */\r\n  public markAsBeingRenamed(): void {\r\n    this.node._status = TreeStatus.IsBeingRenamed;\r\n  }\r\n\r\n  /**\r\n   * Check that current tree is modified (for example it was renamed).\r\n   * @returns {boolean} A flag whether the tree is modified.\r\n   */\r\n  public isModified(): boolean {\r\n    return this.node._status === TreeStatus.Modified;\r\n  }\r\n\r\n  /**\r\n   * Mark current tree as modified (@see {@link isModified}).\r\n   */\r\n  public markAsModified(): void {\r\n    this.node._status = TreeStatus.Modified;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/ng2-tree/src/tree.ts","import { get, defaultsDeep } from './utils/fn.utils';\r\n\r\nexport class FoldingType {\r\n  public static Expanded: FoldingType = new FoldingType('node-expanded');\r\n  public static Collapsed: FoldingType = new FoldingType('node-collapsed');\r\n  public static Empty: FoldingType = new FoldingType('node-empty');\r\n  public static Leaf: FoldingType = new FoldingType('node-leaf');\r\n\r\n  public constructor(private _cssClass: string) {\r\n  }\r\n\r\n  public get cssClass(): string {\r\n    return this._cssClass;\r\n  }\r\n}\r\n\r\nexport type ChildrenLoadingFunction = (callback: (children: TreeModel[]) => void) => void;\r\n\r\nexport interface TreeModel {\r\n  value: string | RenamableNode;\r\n  id?: string | number;\r\n  children?: TreeModel[];\r\n  loadChildren?: ChildrenLoadingFunction;\r\n  settings?: TreeModelSettings;\r\n  _status?: TreeStatus;\r\n  _foldingType?: FoldingType;\r\n  [additionalData: string]: any;\r\n}\r\n\r\nexport interface CssClasses {\r\n  /* The class or classes that should be added to the expanded node */\r\n  expanded?: string;\r\n\r\n  /* The class or classes that should be added to the collapsed node */\r\n  collapsed?: string;\r\n\r\n  /* The class or classes that should be added to the empty node */\r\n  empty?: string;\r\n\r\n  /* The class or classes that should be added to the expanded to the leaf */\r\n  leaf?: string;\r\n}\r\n\r\nexport interface Templates {\r\n  /* A template for a node */\r\n  node?: string;\r\n\r\n  /* A template for a leaf node */\r\n  leaf?: string;\r\n\r\n  /* A template for left menu html element */\r\n  leftMenu?: string;\r\n}\r\n\r\nexport class TreeModelSettings {\r\n  /* cssClasses - set custom css classes which will be used for a tree */\r\n  public cssClasses?: CssClasses;\r\n\r\n  /* Templates - set custom html templates to be used in a tree */\r\n  public templates?: Templates;\r\n\r\n  /**\r\n   * \"leftMenu\" property when set to true makes left menu available.\r\n   * @name TreeModelSettings#leftMenu\r\n   * @type boolean\r\n   * @default false\r\n   */\r\n  public leftMenu?: boolean;\r\n\r\n  /**\r\n   * \"rightMenu\" property when set to true makes right menu available.\r\n   * @name TreeModelSettings#rightMenu\r\n   * @type boolean\r\n   * @default true\r\n   */\r\n  public rightMenu?: boolean;\r\n\r\n  /**\r\n   * \"static\" property when set to true makes it impossible to drag'n'drop tree or call a menu on it.\r\n   * @name TreeModelSettings#static\r\n   * @type boolean\r\n   * @default false\r\n   */\r\n  public static?: boolean;\r\n\r\n  public static merge(sourceA: TreeModel, sourceB: TreeModel): TreeModelSettings {\r\n    return defaultsDeep({}, get(sourceA, 'settings'), get(sourceB, 'settings'), {static: false, leftMenu: false, rightMenu: true});\r\n  }\r\n}\r\n\r\nexport interface Ng2TreeSettings {\r\n  /**\r\n   * Indicates root visibility in the tree. When true - root is invisible.\r\n   * @name Ng2TreeSettings#rootIsVisible\r\n   * @type boolean\r\n   */\r\n  rootIsVisible?: boolean;\r\n}\r\n\r\nexport enum TreeStatus {\r\n  New,\r\n  Modified,\r\n  IsBeingRenamed\r\n}\r\n\r\nexport interface RenamableNode {\r\n  /**\r\n   * Set new value of the renamable node. Implementation of this method is up to user.\r\n   * @param {string} name - A new value of the node.\r\n   */\r\n  setName(name: string): void;\r\n\r\n  /**\r\n   * Get string representation of the node. Implementation of this method is up to user.\r\n   * @returns {string} - A node string representation.\r\n   */\r\n  toString(): string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/ng2-tree/src/tree.types.ts","export enum Keys {\r\n  Escape = 27\r\n}\r\n\r\nexport enum MouseButtons {\r\n  Left = 0,\r\n  Right = 2\r\n}\r\n\r\nexport function isLeftButtonClicked(e: MouseEvent): boolean {\r\n  return e.button === MouseButtons.Left;\r\n}\r\n\r\nexport function isRightButtonClicked(e: MouseEvent): boolean {\r\n  return e.button === MouseButtons.Right;\r\n}\r\n\r\nexport function isEscapePressed(e: KeyboardEvent): boolean {\r\n  return e.keyCode === Keys.Escape;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/ng2-tree/src/utils/event.utils.ts","export function isEmpty(value: any[] | string): boolean {\r\n  if (typeof value === 'string') {\r\n    return !/\\S/.test(value);\r\n  }\r\n\r\n  if (Array.isArray(value)) {\r\n    return value.length === 0;\r\n  }\r\n\r\n  return isNil(value);\r\n}\r\n\r\nexport function trim(value: string): string {\r\n  return isNil(value) ? '' : value.trim();\r\n}\r\n\r\nexport function has(value: any, prop: string): boolean {\r\n  return value && typeof value === 'object' && value.hasOwnProperty(prop);\r\n}\r\n\r\nexport function isFunction(value: any) {\r\n  return typeof value === 'function';\r\n}\r\n\r\nexport function get(value: any, path: string, defaultValue?: any) {\r\n  let result = value;\r\n\r\n  for (const prop of path.split('.')) {\r\n    if (!result || !Reflect.has(result, prop)) {\r\n      return defaultValue;\r\n    }\r\n\r\n    result = result[prop];\r\n  }\r\n\r\n  return isNil(result) || result === value ? defaultValue : result;\r\n}\r\n\r\nexport function omit(value: any, propToSkip: string): any {\r\n  return Object\r\n    .keys(value)\r\n    .reduce((result, prop) => {\r\n      if (prop === propToSkip) {\r\n        return result;\r\n      }\r\n      return Object.assign(result, { [prop]: value[prop] });\r\n    }, {});\r\n}\r\n\r\nexport function size(value: any[]): number {\r\n  return isEmpty(value) ? 0 : value.length;\r\n}\r\n\r\nexport function once(fn: Once): Once {\r\n  let result;\r\n\r\n  return (... args: any[]) => {\r\n    if (fn) {\r\n      result = fn.apply(null, args);\r\n      fn = null;\r\n    }\r\n    return result;\r\n  };\r\n}\r\n\r\nexport function defaultsDeep(target: any, ... sources: any[]): any {\r\n  return [target].concat(sources).reduce((result: any, source: any) => {\r\n    if (!source) {\r\n      return result;\r\n    }\r\n\r\n    Object.keys(source).forEach((prop) => {\r\n      if (isNil(result[prop])) {\r\n        result[prop] = source[prop];\r\n        return;\r\n      }\r\n\r\n      if (typeof result[prop] === 'object' && !Array.isArray(result[prop])) {\r\n        result[prop] = defaultsDeep(result[prop], source[prop]);\r\n        return;\r\n      }\r\n    });\r\n\r\n    return result;\r\n  }, {});\r\n}\r\n\r\nexport function includes(target: string | any[], value: any): boolean {\r\n  if (isNil(target)) {\r\n    return false;\r\n  }\r\n\r\n  const index = typeof target === 'string' ? target.indexOf(value as string) : target.indexOf(value);\r\n  return index > -1;\r\n}\r\n\r\nexport function isNil(value: any): boolean {\r\n  return value === undefined || value === null;\r\n}\r\n\r\nexport type Once = (... args: any[]) => any;\r\n\n\n\n// WEBPACK FOOTER //\n// D:/ng2-tree/src/utils/fn.utils.ts","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'safeHtml' })\r\nexport class SafeHtmlPipe implements PipeTransform  {\r\n  public constructor(private sanitizer: DomSanitizer) {}\r\n\r\n  public transform(value: string): SafeHtml {\r\n  // return value;\r\n    return this.sanitizer.bypassSecurityTrustHtml(value);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/ng2-tree/src/utils/safe-html.pipe.ts"],"sourceRoot":"webpack:///"}